from datetime import datetime
from flask import Blueprint, render_template, redirect, flash, url_for, request, session
from flask_login import login_required, login_user, logout_user, current_user
from models.profile import User, check_password, generate_password
from app import db, app
from custom_email import send_email

profile = Blueprint('profile', __name__)


@profile.route('/login', methods=["GET", "POST"])
def login():
    if request.method == 'GET':
        return render_template('profile/login.html')
    username = request.form['username']
    password = request.form['password']
    registered_user = User.query.filter_by(username=username).first()
    if registered_user is None:
        flash("Invalid credentials", category="error")
        return render_template('profile/login.html')
    if not check_password(registered_user.password, password):
        flash("Invalid credentials", category="error")
        return render_template('profile/login.html')
    login_user(registered_user, remember=True)
    session['user_id'] = registered_user.id
    registered_user.update(commit=False, loginTime=datetime.utcnow())
    db.session.commit()
    flash('Logged in successfully.')
    return redirect(request.args.get('next') or url_for('dashboard.dashboard'))


@profile.route('/logout', methods=["GET", "POST"])
@login_required
def logout():
    logout_user()
    flash('you have successfully logged out')
    return redirect(url_for('profile.login'))


@profile.route('/forget_password', methods=["POST"])
def forget_password():
    if request.method == 'POST':
        username = request.form['username']
        registered_user = User.query.filter_by(username=username).first()
        if registered_user is None:
            flash("Invalid User", category="error")
            return render_template('profile/login.html')
        else:
            reset_password_link = app.config['BASE_URL'] + url_for('profile.reset_password', user_id=registered_user.id)
            text = "Hi %s,\nPlease click %s to reset your password.\nThanks & Regards\nOCTAD"
            html = """
            <html>
                <body>
                    <div><h3>Hi %s</h3></div>
                    <p>Please click <a href='%s'>here</a> to reset your password</p>
                    <p>Thanks & Regards,</p>
                    <p>OCTAD</p>
                </body>
            </html>""" % (registered_user.username, reset_password_link)
            if send_email(registered_user.username, "Reset Password Link", text, html):
                flash('Please check you email for reset password link')
            else:
                flash('Please check your administrator for reset password link', category="error")
        return redirect(url_for('profile.login'))


@profile.route('/change_password', methods=["GET", "POST"])
@login_required
def change_password():
    if request.method == 'GET':
        return render_template('profile/change_password.html')
    else:
        old_passwd = request.form['old_pwd']
        new_passwd = request.form['new_pwd']
        retype_passwd = request.form['retype_pwd']
        if old_passwd == new_passwd:
            flash('Old and New password can not same', category="error")
        elif new_passwd != retype_passwd:
            flash('New and Retype password must be same', category="error")
        elif old_passwd != new_passwd and new_passwd == retype_passwd:
            hash_new_pwd = generate_password(new_passwd)
            current_user.update(commit=True, password=hash_new_pwd)
            flash('your password change successfully')
            return redirect(url_for('dashboard.dashboard'))
        else:
            flash('your password change successfully', category="error")
        return render_template('profile/change_password.html')


@profile.route('/reset_password/<user_id>', methods=["GET", "POST"])
def reset_password(user_id):
    if request.method == 'GET':
        print user_id
        return render_template('profile/reset_password.html', user_id=user_id)
    else:
        raw_password = request.form['new_pwd']
        re_type_password = request.form['retype_pwd']
        registered_user = User.query.filter_by(id=user_id).first()
        if registered_user is None:
            flash("Invalid User", category="error")
            return render_template('profile/reset_password.html')
        else:
            if raw_password != re_type_password:
                flash("Both Password should be same", category="error")
                return render_template('profile/reset_password.html')
            password = generate_password(raw_password)
            registered_user.update(commit=True, password=password)
            flash('Password chagned successfully')
            return redirect(url_for('profile.login'))
